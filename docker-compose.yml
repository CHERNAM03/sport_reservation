services:
   # Frontend service configuration
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "${FRONTEND_PORT}:80"
    depends_on:
      - backend
    networks:
      - app-network
   # Backend service configuration
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile/dockerfile
    ports:
      - "${BACKEND_PORT}:5000"
    environment:
      - DB_HOST=${DB_HOST}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - DB_PORT=${DB_PORT}
    depends_on:
      - db
    networks:
      - app-network
    volumes:
      - ./backend:/app
      - /app/node_modules
    # Database service configuration
  db:
    image: mysql:8.0
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: 'dbuser'
      MYSQL_PASSWORD: ${DB_PASSWORD}
    ports:
      - "${DB_PORT}:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 5s
      retries: 10
    networks:
      - app-network
    volumes:
      - db-data:/var/lib/mysql
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql

  # PhpMyAdmin service configuration
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    restart: always
    ports:
      - "${PMA_PORT}:80"
    environment:
      PMA_HOST: ${DB_HOST}
      PMA_PORT: ${DB_PORT}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      PMA_ARBITRARY: 1
    depends_on:
      - db
    networks:
      - app-network
networks:
  app-network:
    driver: bridge

volumes:
  db-data:

  