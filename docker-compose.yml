services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - NODE_ENV=${NODE_ENV:-development}
    ports:
      - "${FRONTEND_PORT:-3000}:80"
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - API_URL=${API_URL:-http://localhost:5000}
    depends_on:
      - backend
    networks:
      - app-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile/dockerfile
    ports:
      - "${BACKEND_PORT:-5000}:5000"
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - DB_HOST=${DB_HOST:-db}
      - DB_USER=${DB_USER:-dbuser}
      - DB_PASSWORD=${DB_PASSWORD:-root}
      - DB_NAME=${DB_NAME:-sports_reservation}
      - DB_PORT=${DB_PORT:-3306}
      - JWT_SECRET=${JWT_SECRET:-development_secret}
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network
    volumes:
      - ./backend:/app
      - /app/node_modules

  db:
    image: mysql:8.0
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD:-root}
      MYSQL_DATABASE: ${DB_NAME:-sports_reservation}
      MYSQL_USER: ${DB_USER:-dbuser}
      MYSQL_PASSWORD: ${DB_PASSWORD:-root}
    ports:
      - "${DB_PORT:-3306}:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 5s
      retries: 10
    networks:
      - app-network
    volumes:
      - db-data:/var/lib/mysql
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    restart: always
    ports:
      - "${PMA_PORT:-8080}:80"
    environment:
      PMA_HOST: ${DB_HOST:-db}
      PMA_PORT: ${DB_PORT:-3306}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD:-root}
      PMA_ARBITRARY: 1
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  db-data:
    name: ${DB_VOLUME_NAME:-sports_reservation_data}